// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.24.4
// source: internal-tablet.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateShardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table        string                   `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	TableRows    map[string]*TableRows    `protobuf:"bytes,2,rep,name=table_rows,json=tableRows,proto3" json:"table_rows,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TableColumns map[string]*TableColumns `protobuf:"bytes,3,rep,name=table_columns,json=tableColumns,proto3" json:"table_columns,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TableInfo    map[string]string        `protobuf:"bytes,4,rep,name=table_info,json=tableInfo,proto3" json:"table_info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateShardRequest) Reset() {
	*x = UpdateShardRequest{}
	mi := &file_internal_tablet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShardRequest) ProtoMessage() {}

func (x *UpdateShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_tablet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShardRequest.ProtoReflect.Descriptor instead.
func (*UpdateShardRequest) Descriptor() ([]byte, []int) {
	return file_internal_tablet_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateShardRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *UpdateShardRequest) GetTableRows() map[string]*TableRows {
	if x != nil {
		return x.TableRows
	}
	return nil
}

func (x *UpdateShardRequest) GetTableColumns() map[string]*TableColumns {
	if x != nil {
		return x.TableColumns
	}
	return nil
}

func (x *UpdateShardRequest) GetTableInfo() map[string]string {
	if x != nil {
		return x.TableInfo
	}
	return nil
}

type TableRows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *TableRows) Reset() {
	*x = TableRows{}
	mi := &file_internal_tablet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableRows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableRows) ProtoMessage() {}

func (x *TableRows) ProtoReflect() protoreflect.Message {
	mi := &file_internal_tablet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableRows.ProtoReflect.Descriptor instead.
func (*TableRows) Descriptor() ([]byte, []int) {
	return file_internal_tablet_proto_rawDescGZIP(), []int{1}
}

func (x *TableRows) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type TableColumns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *TableColumns) Reset() {
	*x = TableColumns{}
	mi := &file_internal_tablet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableColumns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableColumns) ProtoMessage() {}

func (x *TableColumns) ProtoReflect() protoreflect.Message {
	mi := &file_internal_tablet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableColumns.ProtoReflect.Descriptor instead.
func (*TableColumns) Descriptor() ([]byte, []int) {
	return file_internal_tablet_proto_rawDescGZIP(), []int{2}
}

func (x *TableColumns) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type ShardFinishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table string             `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Data  []*ShardServerInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ShardFinishRequest) Reset() {
	*x = ShardFinishRequest{}
	mi := &file_internal_tablet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardFinishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardFinishRequest) ProtoMessage() {}

func (x *ShardFinishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_tablet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardFinishRequest.ProtoReflect.Descriptor instead.
func (*ShardFinishRequest) Descriptor() ([]byte, []int) {
	return file_internal_tablet_proto_rawDescGZIP(), []int{3}
}

func (x *ShardFinishRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *ShardFinishRequest) GetData() []*ShardServerInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShardServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Port     string `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	RowFrom  string `protobuf:"bytes,3,opt,name=row_from,json=rowFrom,proto3" json:"row_from,omitempty"`
	RowTo    string `protobuf:"bytes,4,opt,name=row_to,json=rowTo,proto3" json:"row_to,omitempty"`
}

func (x *ShardServerInfo) Reset() {
	*x = ShardServerInfo{}
	mi := &file_internal_tablet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardServerInfo) ProtoMessage() {}

func (x *ShardServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_tablet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardServerInfo.ProtoReflect.Descriptor instead.
func (*ShardServerInfo) Descriptor() ([]byte, []int) {
	return file_internal_tablet_proto_rawDescGZIP(), []int{4}
}

func (x *ShardServerInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ShardServerInfo) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *ShardServerInfo) GetRowFrom() string {
	if x != nil {
		return x.RowFrom
	}
	return ""
}

func (x *ShardServerInfo) GetRowTo() string {
	if x != nil {
		return x.RowTo
	}
	return ""
}

type UpdateShardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateShardResponse) Reset() {
	*x = UpdateShardResponse{}
	mi := &file_internal_tablet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShardResponse) ProtoMessage() {}

func (x *UpdateShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_tablet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShardResponse.ProtoReflect.Descriptor instead.
func (*UpdateShardResponse) Descriptor() ([]byte, []int) {
	return file_internal_tablet_proto_rawDescGZIP(), []int{5}
}

type ShardFinishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShardFinishResponse) Reset() {
	*x = ShardFinishResponse{}
	mi := &file_internal_tablet_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardFinishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardFinishResponse) ProtoMessage() {}

func (x *ShardFinishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_tablet_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardFinishResponse.ProtoReflect.Descriptor instead.
func (*ShardFinishResponse) Descriptor() ([]byte, []int) {
	return file_internal_tablet_proto_rawDescGZIP(), []int{6}
}

var File_internal_tablet_proto protoreflect.FileDescriptor

var file_internal_tablet_proto_rawDesc = []byte{
	0x0a, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2d, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0x81, 0x04, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x4a,
	0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x53, 0x0a, 0x0d, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0c, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12,
	0x4a, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x51, 0x0a, 0x0e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x6f, 0x77, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x57,
	0x0a, 0x11, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3c, 0x0a, 0x0e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x23, 0x0a, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f,
	0x77, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x26, 0x0a, 0x0c, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x22, 0x59, 0x0a, 0x12, 0x53, 0x68, 0x61, 0x72, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62,
	0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x73, 0x0a,
	0x0f, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x77, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x77, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x15, 0x0a, 0x06, 0x72,
	0x6f, 0x77, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x77,
	0x54, 0x6f, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0xaf, 0x01, 0x0a, 0x15, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x2e, 0x62, 0x69, 0x67, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x53, 0x68, 0x61, 0x72, 0x64, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x1c, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_tablet_proto_rawDescOnce sync.Once
	file_internal_tablet_proto_rawDescData = file_internal_tablet_proto_rawDesc
)

func file_internal_tablet_proto_rawDescGZIP() []byte {
	file_internal_tablet_proto_rawDescOnce.Do(func() {
		file_internal_tablet_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_tablet_proto_rawDescData)
	})
	return file_internal_tablet_proto_rawDescData
}

var file_internal_tablet_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_internal_tablet_proto_goTypes = []any{
	(*UpdateShardRequest)(nil),  // 0: bigtable.UpdateShardRequest
	(*TableRows)(nil),           // 1: bigtable.TableRows
	(*TableColumns)(nil),        // 2: bigtable.TableColumns
	(*ShardFinishRequest)(nil),  // 3: bigtable.ShardFinishRequest
	(*ShardServerInfo)(nil),     // 4: bigtable.ShardServerInfo
	(*UpdateShardResponse)(nil), // 5: bigtable.UpdateShardResponse
	(*ShardFinishResponse)(nil), // 6: bigtable.ShardFinishResponse
	nil,                         // 7: bigtable.UpdateShardRequest.TableRowsEntry
	nil,                         // 8: bigtable.UpdateShardRequest.TableColumnsEntry
	nil,                         // 9: bigtable.UpdateShardRequest.TableInfoEntry
}
var file_internal_tablet_proto_depIdxs = []int32{
	7, // 0: bigtable.UpdateShardRequest.table_rows:type_name -> bigtable.UpdateShardRequest.TableRowsEntry
	8, // 1: bigtable.UpdateShardRequest.table_columns:type_name -> bigtable.UpdateShardRequest.TableColumnsEntry
	9, // 2: bigtable.UpdateShardRequest.table_info:type_name -> bigtable.UpdateShardRequest.TableInfoEntry
	4, // 3: bigtable.ShardFinishRequest.data:type_name -> bigtable.ShardServerInfo
	1, // 4: bigtable.UpdateShardRequest.TableRowsEntry.value:type_name -> bigtable.TableRows
	2, // 5: bigtable.UpdateShardRequest.TableColumnsEntry.value:type_name -> bigtable.TableColumns
	0, // 6: bigtable.TabletInternalService.UpdateShard:input_type -> bigtable.UpdateShardRequest
	3, // 7: bigtable.TabletInternalService.ShardFinish:input_type -> bigtable.ShardFinishRequest
	5, // 8: bigtable.TabletInternalService.UpdateShard:output_type -> bigtable.UpdateShardResponse
	6, // 9: bigtable.TabletInternalService.ShardFinish:output_type -> bigtable.ShardFinishResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_internal_tablet_proto_init() }
func file_internal_tablet_proto_init() {
	if File_internal_tablet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_tablet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_tablet_proto_goTypes,
		DependencyIndexes: file_internal_tablet_proto_depIdxs,
		MessageInfos:      file_internal_tablet_proto_msgTypes,
	}.Build()
	File_internal_tablet_proto = out.File
	file_internal_tablet_proto_rawDesc = nil
	file_internal_tablet_proto_goTypes = nil
	file_internal_tablet_proto_depIdxs = nil
}
