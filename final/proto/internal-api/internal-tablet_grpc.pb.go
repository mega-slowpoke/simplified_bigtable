// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v4.24.4
// source: internal-tablet.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	TabletInternalService_CreateTable_FullMethodName = "/bigtable.TabletInternalService/CreateTable"
	TabletInternalService_DeleteTable_FullMethodName = "/bigtable.TabletInternalService/DeleteTable"
)

// TabletInternalServiceClient is the client API for TabletInternalService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TabletInternalServiceClient interface {
	CreateTable(ctx context.Context, in *CreateTableInternalRequest, opts ...grpc.CallOption) (*CreateTableInternalResponse, error)
	DeleteTable(ctx context.Context, in *DeleteTableInternalRequest, opts ...grpc.CallOption) (*DeleteTableInternalResponse, error)
}

type tabletInternalServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTabletInternalServiceClient(cc grpc.ClientConnInterface) TabletInternalServiceClient {
	return &tabletInternalServiceClient{cc}
}

func (c *tabletInternalServiceClient) CreateTable(ctx context.Context, in *CreateTableInternalRequest, opts ...grpc.CallOption) (*CreateTableInternalResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateTableInternalResponse)
	err := c.cc.Invoke(ctx, TabletInternalService_CreateTable_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tabletInternalServiceClient) DeleteTable(ctx context.Context, in *DeleteTableInternalRequest, opts ...grpc.CallOption) (*DeleteTableInternalResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteTableInternalResponse)
	err := c.cc.Invoke(ctx, TabletInternalService_DeleteTable_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TabletInternalServiceServer is the server API for TabletInternalService service.
// All implementations must embed UnimplementedTabletInternalServiceServer
// for forward compatibility.
type TabletInternalServiceServer interface {
	CreateTable(context.Context, *CreateTableInternalRequest) (*CreateTableInternalResponse, error)
	DeleteTable(context.Context, *DeleteTableInternalRequest) (*DeleteTableInternalResponse, error)
	mustEmbedUnimplementedTabletInternalServiceServer()
}

// UnimplementedTabletInternalServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedTabletInternalServiceServer struct{}

func (UnimplementedTabletInternalServiceServer) CreateTable(context.Context, *CreateTableInternalRequest) (*CreateTableInternalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTable not implemented")
}
func (UnimplementedTabletInternalServiceServer) DeleteTable(context.Context, *DeleteTableInternalRequest) (*DeleteTableInternalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTable not implemented")
}
func (UnimplementedTabletInternalServiceServer) mustEmbedUnimplementedTabletInternalServiceServer() {}
func (UnimplementedTabletInternalServiceServer) testEmbeddedByValue()                               {}

// UnsafeTabletInternalServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TabletInternalServiceServer will
// result in compilation errors.
type UnsafeTabletInternalServiceServer interface {
	mustEmbedUnimplementedTabletInternalServiceServer()
}

func RegisterTabletInternalServiceServer(s grpc.ServiceRegistrar, srv TabletInternalServiceServer) {
	// If the following call pancis, it indicates UnimplementedTabletInternalServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&TabletInternalService_ServiceDesc, srv)
}

func _TabletInternalService_CreateTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTableInternalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TabletInternalServiceServer).CreateTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TabletInternalService_CreateTable_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TabletInternalServiceServer).CreateTable(ctx, req.(*CreateTableInternalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TabletInternalService_DeleteTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTableInternalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TabletInternalServiceServer).DeleteTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TabletInternalService_DeleteTable_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TabletInternalServiceServer).DeleteTable(ctx, req.(*DeleteTableInternalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// TabletInternalService_ServiceDesc is the grpc.ServiceDesc for TabletInternalService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TabletInternalService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "bigtable.TabletInternalService",
	HandlerType: (*TabletInternalServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTable",
			Handler:    _TabletInternalService_CreateTable_Handler,
		},
		{
			MethodName: "DeleteTable",
			Handler:    _TabletInternalService_DeleteTable_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal-tablet.proto",
}
