syntax ="proto3";

package bigtable;

option go_package = "final/proto";

service MasterService {
  rpc RegisterTablet (RegisterTabletRequest) returns (RegisterTabletResponse);
  rpc UnregisterTablet (UnregisterTabletRequest) returns (UnregisterTabletRequest);
  rpc GetTabletAssignments (GetTabletAssignmentsRequest) returns (GetTabletAssignmentsResponse);
  rpc ReportTabletStatus (ReportTabletStatusRequest) returns (ReportTabletStatusResponse);
}



// Messages for master-server interactions

// register应该只负责最开始把tablet登记到master里面，不负责传递tablet具体有什么信息
message RegisterTabletRequest {
  string table_name = 1;
  string table_start_row = 2;
  string table_end_row = 3;
  string tablet_address = 4;
}


message RegisterTabletResponse {
  bool success = 1;
  string error_message = 2;
}


message UnregisterTabletRequest {
  string table_name = 1;
}


message UnregisterTabletResponse {
  bool success = 1;
  string error_message = 2;
}


message GetTabletAssignmentsRequest {
  string table_name = 1;
}


message GetTabletAssignmentsResponse {
  repeated TabletAssignment tablet_assignments = 1;
}


message TabletAssignment {
  string tablet_start_row = 1;
  string tablet_end_row = 2;
  string server_address = 3;
}


// OPTIONAL IN MVP
message ReportTabletStatusRequest {
  string table_name = 1;
  string tablet_start_row = 2;
  string tablet_end_row = 3;
  string server_address = 4;
  string status = 5;  // e.g., "HEALTHY", "UNRESPONSIVE", etc.
}


message ReportTabletStatusResponse {
  bool success = 1;
  string error_message = 2;
}
