syntax = "proto3";

package bigtable;

option go_package = "final/proto";


// Service for client interactions with user tablet servers
service TabletService {
  rpc CreateTable(CreateTableRequest) returns (CreateTableResponse);
  rpc Read (ReadRequest) returns (ReadResponse);
  rpc Write (WriteRequest) returns (WriteResponse);
  rpc Delete (DeleteRequest) returns (DeleteResponse);
  rpc Scan (ScanRequest) returns (ScanResponse);
}

message CreateTableRequest {
  string table_name = 1;
}

message CreateTableResponse {
  bool success = 1;
  string error_message = 2;
}

// Messages for data operations
message ReadRequest {
  string table_name = 1;
  string row_key = 2;
  string column_family = 3;
  string column_qualifier = 4;
  int64 return_version = 5;   // how many version does the need to read (at most MAXVERSION)
}

message ReadResponse {
  repeated ValueWithTimestamps values = 1;
}

message ValueWithTimestamps {
  int64 timestamp = 1;
  string value = 2;
}

message WriteRequest {
  string table_name = 1;
  string row_key = 2;
  string column_family = 3;
  string column_qualifier = 4;
  bytes value = 5;
  int64 timestamp = 6;
}

message WriteResponse {
  bool success = 1;
  string error_message = 2;
}

message DeleteRequest {
  string table_name = 1;
  string row_key = 2;
  string column_family = 3;
  string column_qualifier = 4;
}

message DeleteResponse {
  bool success = 1;
  string error_message = 2;
}

message ScanRequest {
  string table_name = 1;
  string start_row_key = 2;
  string end_row_key = 3;
  string column_family = 4;
  string column_qualifier = 5;
}

message ScanResponse {
  string row_key = 1;
  bytes value = 2;
  int64 timestamp = 3;
}