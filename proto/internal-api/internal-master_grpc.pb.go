// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v4.24.4
// source: internal-master.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	MasterInternalService_RegisterTablet_FullMethodName     = "/bigtable.MasterInternalService/RegisterTablet"
	MasterInternalService_UnregisterTablet_FullMethodName   = "/bigtable.MasterInternalService/UnregisterTablet"
	MasterInternalService_NotifyShardRequest_FullMethodName = "/bigtable.MasterInternalService/NotifyShardRequest"
	MasterInternalService_NotifyShardFinish_FullMethodName  = "/bigtable.MasterInternalService/NotifyShardFinish"
)

// MasterInternalServiceClient is the client API for MasterInternalService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MasterInternalServiceClient interface {
	RegisterTablet(ctx context.Context, in *RegisterTabletRequest, opts ...grpc.CallOption) (*RegisterTabletResponse, error)
	UnregisterTablet(ctx context.Context, in *UnregisterTabletRequest, opts ...grpc.CallOption) (*UnregisterTabletResponse, error)
	NotifyShardRequest(ctx context.Context, in *ShardRequest, opts ...grpc.CallOption) (*ShardResponse, error)
	NotifyShardFinish(ctx context.Context, in *ShardFinishNotificationRequest, opts ...grpc.CallOption) (*ShardFinishNotificationResponse, error)
}

type masterInternalServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMasterInternalServiceClient(cc grpc.ClientConnInterface) MasterInternalServiceClient {
	return &masterInternalServiceClient{cc}
}

func (c *masterInternalServiceClient) RegisterTablet(ctx context.Context, in *RegisterTabletRequest, opts ...grpc.CallOption) (*RegisterTabletResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RegisterTabletResponse)
	err := c.cc.Invoke(ctx, MasterInternalService_RegisterTablet_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *masterInternalServiceClient) UnregisterTablet(ctx context.Context, in *UnregisterTabletRequest, opts ...grpc.CallOption) (*UnregisterTabletResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UnregisterTabletResponse)
	err := c.cc.Invoke(ctx, MasterInternalService_UnregisterTablet_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *masterInternalServiceClient) NotifyShardRequest(ctx context.Context, in *ShardRequest, opts ...grpc.CallOption) (*ShardResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ShardResponse)
	err := c.cc.Invoke(ctx, MasterInternalService_NotifyShardRequest_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *masterInternalServiceClient) NotifyShardFinish(ctx context.Context, in *ShardFinishNotificationRequest, opts ...grpc.CallOption) (*ShardFinishNotificationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ShardFinishNotificationResponse)
	err := c.cc.Invoke(ctx, MasterInternalService_NotifyShardFinish_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MasterInternalServiceServer is the server API for MasterInternalService service.
// All implementations must embed UnimplementedMasterInternalServiceServer
// for forward compatibility.
type MasterInternalServiceServer interface {
	RegisterTablet(context.Context, *RegisterTabletRequest) (*RegisterTabletResponse, error)
	UnregisterTablet(context.Context, *UnregisterTabletRequest) (*UnregisterTabletResponse, error)
	NotifyShardRequest(context.Context, *ShardRequest) (*ShardResponse, error)
	NotifyShardFinish(context.Context, *ShardFinishNotificationRequest) (*ShardFinishNotificationResponse, error)
	mustEmbedUnimplementedMasterInternalServiceServer()
}

// UnimplementedMasterInternalServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedMasterInternalServiceServer struct{}

func (UnimplementedMasterInternalServiceServer) RegisterTablet(context.Context, *RegisterTabletRequest) (*RegisterTabletResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterTablet not implemented")
}
func (UnimplementedMasterInternalServiceServer) UnregisterTablet(context.Context, *UnregisterTabletRequest) (*UnregisterTabletResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnregisterTablet not implemented")
}
func (UnimplementedMasterInternalServiceServer) NotifyShardRequest(context.Context, *ShardRequest) (*ShardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifyShardRequest not implemented")
}
func (UnimplementedMasterInternalServiceServer) NotifyShardFinish(context.Context, *ShardFinishNotificationRequest) (*ShardFinishNotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifyShardFinish not implemented")
}
func (UnimplementedMasterInternalServiceServer) mustEmbedUnimplementedMasterInternalServiceServer() {}
func (UnimplementedMasterInternalServiceServer) testEmbeddedByValue()                               {}

// UnsafeMasterInternalServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MasterInternalServiceServer will
// result in compilation errors.
type UnsafeMasterInternalServiceServer interface {
	mustEmbedUnimplementedMasterInternalServiceServer()
}

func RegisterMasterInternalServiceServer(s grpc.ServiceRegistrar, srv MasterInternalServiceServer) {
	// If the following call pancis, it indicates UnimplementedMasterInternalServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&MasterInternalService_ServiceDesc, srv)
}

func _MasterInternalService_RegisterTablet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterTabletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterInternalServiceServer).RegisterTablet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MasterInternalService_RegisterTablet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterInternalServiceServer).RegisterTablet(ctx, req.(*RegisterTabletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MasterInternalService_UnregisterTablet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnregisterTabletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterInternalServiceServer).UnregisterTablet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MasterInternalService_UnregisterTablet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterInternalServiceServer).UnregisterTablet(ctx, req.(*UnregisterTabletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MasterInternalService_NotifyShardRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterInternalServiceServer).NotifyShardRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MasterInternalService_NotifyShardRequest_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterInternalServiceServer).NotifyShardRequest(ctx, req.(*ShardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MasterInternalService_NotifyShardFinish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShardFinishNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterInternalServiceServer).NotifyShardFinish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MasterInternalService_NotifyShardFinish_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterInternalServiceServer).NotifyShardFinish(ctx, req.(*ShardFinishNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// MasterInternalService_ServiceDesc is the grpc.ServiceDesc for MasterInternalService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MasterInternalService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "bigtable.MasterInternalService",
	HandlerType: (*MasterInternalServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterTablet",
			Handler:    _MasterInternalService_RegisterTablet_Handler,
		},
		{
			MethodName: "UnregisterTablet",
			Handler:    _MasterInternalService_UnregisterTablet_Handler,
		},
		{
			MethodName: "NotifyShardRequest",
			Handler:    _MasterInternalService_NotifyShardRequest_Handler,
		},
		{
			MethodName: "NotifyShardFinish",
			Handler:    _MasterInternalService_NotifyShardFinish_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal-master.proto",
}
